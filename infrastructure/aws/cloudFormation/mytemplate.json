{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample CloudFormation Template for CSYE 6225 - Fall 2017",
  "Parameters": {
    "ImageId": {
      "Type": "String"
    },
    "InstanceType": {
      "Type": "String"
    },
    "KeyName": {
      "Type": "String"
    },
    "DBEngine": {
      "Type": "String"
    },
    "EngineVersion": {
      "Type": "String"
    },
    "DBInstanceClass": {
      "Type": "String"
    },
    "DBInstanceIdentifier": {
      "Type": "String"
    },
    "MasterUsername": {
      "Type": "String"
    },
    "MasterPassword": {
      "Type": "String"
    },
    "DBName": {
      "Type": "String"
    },
    "DynamoDBTableName": {
      "Type": "String"
    },
    "BucketName": {
      "Type": "String"
    },
    "HostedZoneName": {
      "Type": "String"
    },
    "HostedZoneId": {
      "Type": "String"
    },
    "Subnet1": {
      "Type": "String"
    },
    "Subnet2": {
      "Type": "String"
    },
    "VpcId": {
      "Type": "String"
    }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access via port 80, SSH access via port 22, HTTPS via port 443",
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupName": "csye6225-webapp",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "DbSecurityByEC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Open database for access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "SecurityGroup",
                "GroupId"
              ]
            }
          }
        ]
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "ImageId"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SecurityGroup",
              "GroupId"
            ]
          }
        ],
        "IamInstanceProfile": {
          "Ref": "MyIamProfile"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "export DEBIAN_FRONTEND=noninteractive\n",
                "apt-get update && apt-get upgrade -y\n",
                "apt-get -y install tomcat8\n",
                "sudo apt-get update\n",
                "sudo apt-get -y install ruby\n",
                "sudo apt-get install wget\n",
                "cd /home/ubuntu\n",
                "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
                "chmod +x ./install\n",
                "sudo ./install auto\n",
                "sudo service codedeploy-agent status",
                "sudo service codedeploy-agent start",
                "sudo service codedeploy-agent status",
                "echo '#!/bin/sh' > /usr/share/tomcat8/bin/setenv.sh",
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=\"jdbc:mysql://",
                      {
                        "Fn::GetAtt": [
                          "DBInstance",
                          "Endpoint.Address"
                        ]
                      },
                      ":3306/csye6225\"\"' >> /usr/share/tomcat8/bin/setenv.sh"
                    ]
                  ]
                },
                "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=csye6225master\"' >> /usr/share/tomcat8/bin/setenv.sh",
                "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=csye6225password\"' >> /usr/share/tomcat8/bin/setenv.sh",
                "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.amazon.s3.default-bucket=csye6225master\"' >> /usr/share/tomcat8/bin/setenv.sh",
                "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active=aws\"' >> /usr/share/tomcat8/bin/setenv.sh",
                "chmod +x /usr/share/tomcat8/bin/setenv.sh",
                "chown tomcat8:tomcat8 /usr/share/tomcat8/bin/setenv.sh"
              ]
            ]
          }
        }
      }
    },
    "DBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "100",
        "Engine": {
          "Ref": "DBEngine"
        },
        "EngineVersion": {
          "Ref": "EngineVersion"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "MultiAZ": "false",
        "DBInstanceIdentifier": {
          "Ref": "DBInstanceIdentifier"
        },
        "MasterUsername": {
          "Ref": "MasterUsername"
        },
        "MasterUserPassword": {
          "Ref": "MasterPassword"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnet"
        },
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "DbSecurityByEC2SecurityGroup",
              "GroupId"
            ]
          }
        ],
        "PubliclyAccessible": "false",
        "DBName": {
          "Ref": "DBName"
        }
      }
    },
    "DynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "PrimaryId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "PrimaryId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "TableName": {
          "Ref": "DynamoDBTableName"
        }
      }
    },
    "myDNSRecord": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": {
          "Ref": "HostedZoneName"
        },
        "HostedZoneId": {
          "Ref": "HostedZoneId"
        },
        "Comment": "DNS name for my instance.",
        "Type": "A",
        "TTL": "60",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "EC2Instance",
              "PublicIp"
            ]
          }
        ]
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Description": "Name of S3 bucket to hold website content",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": {
          "Ref": "BucketName"
        }
      }
    },
    "MyIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonRDSFullAccess",
          "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "MyIamProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "MyIamRole"
          }
        ],
        "InstanceProfileName": "csye-test-iam-profile"
      }
    },
    "S3AccessPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "Roles": [
          {
            "Ref": "MyIamRole"
          }
        ],
        "PolicyName": "csye-test-s3-policy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3Bucket",
                        "Arn"
                      ]
                    }
                  ]
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "S3Bucket",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "MyIamPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "Roles": [
          {
            "Ref": "MyIamRole"
          }
        ],
        "PolicyName": "csye-test-policy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyIamProfile",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
      "DBSubnet": {
        "Type": "AWS::RDS::DBSubnetGroup",
        "Properties": {
          "DBSubnetGroupDescription": "description",
          "SubnetIds": [
            {
              "Ref": "Subnet1"
            },
            {
              "Ref": "Subnet2"
            }
          ]
        }
      }
    }
  }